# -*- coding: utf-8 -*-
"""movie_recomend.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XLvGOqc2Tj5K40VXRmqil_QYkxhcnYoA
"""

import pandas as pd

import numpy as np

from sklearn.feature_extraction.text import CountVectorizer

from sklearn.metrics.pairwise import cosine_similarity

def get_title_from_index(index):
	return df[df.index == index]["title"].values[0]

def get_index_from_title(title):
	return df[df.title == title]["index"].values[0]


def combine_features(row):
  try:
    return row['keywords']+" "+row['cast']+" "+row['genres']+" "+row['director']
  except:
    print("error"+row)


df=pd.read_csv('movie_dataset.csv')

features=['keywords','cast','genres','director']

for feature in features:
  df[features]=df[features].fillna(' ')

df['combined_features']=df.apply(combine_features,axis=1)



cv=CountVectorizer()

count_matrix=cv.fit_transform(df['combined_features'])

cosin_sim=cosine_similarity(count_matrix)

def get_movies(liked_movie):
  movie_index=get_index_from_title(liked_movie)

  sim_movies=list(enumerate(cosin_sim[movie_index]))

  sorted_movie=sorted(sim_movies,key=lambda x:x[1],reverse=True)

  d={}
  #                           only top 50 movies
  for index,movie in enumerate(sorted_movie[:50]):
    d[index]=get_title_from_index(movie[0])

  return d

liked_movie="Thor"

movies=get_movies(liked_movie)
